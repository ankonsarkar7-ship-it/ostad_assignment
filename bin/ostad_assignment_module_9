// Abstract class Animal
abstract class Animal {
  // private field (encapsulation)
  String _name;

  // Constructor
  Animal(this._name);

  // Abstract method
  void makeSound();

  // Concrete method
  String getName() {
    return _name;
  }
}

// Lion class
class Lion extends Animal {
  double _maneSize; // private property

  Lion(String name, double maneSize) : _maneSize = maneSize, super(name);

  // Getter
  double get maneSize => _maneSize;

  // Setter with validation
  set maneSize(double size) {
    if (size > 0) {
      _maneSize = size;
    } else {
      print("Mane size must be positive.");
    }
  }

  @override
  void makeSound() {
    print("Roar!");
  }
}

// Elephant class
class Elephant extends Animal {
  double _trunkLength; // private property

  Elephant(String name, double trunkLength)
      : _trunkLength = trunkLength,
        super(name);

  // Getter
  double get trunkLength => _trunkLength;

  // Setter with validation
  set trunkLength(double length) {
    if (length > 0) {
      _trunkLength = length;
    } else {
      print("Trunk length must be positive.");
    }
  }

  @override
  void makeSound() {
    print("Trumpet!");
  }
}

// Parrot class
class Parrot extends Animal {
  int _vocabularySize; // private property

  Parrot(String name, int vocabularySize)
      : _vocabularySize = vocabularySize,
        super(name);

  // Getter
  int get vocabularySize => _vocabularySize;

  // Setter with validation
  set vocabularySize(int size) {
    if (size >= 0) {
      _vocabularySize = size;
    } else {
      print("Vocabulary size cannot be negative.");
    }
  }

  @override
  void makeSound() {
    print("Squawk! Hello!");
  }
}

// Main function
void main() {
  // Create a list of Animal objects
  List<Animal> zoo = [];

  // Add animals
  zoo.add(Lion("Leo", 25.0));
  zoo.add(Elephant("Dumbo", 150.0));
  zoo.add(Parrot("Polly", 50));

  // Loop through animals
  for (var animal in zoo) {
    print("Name: ${animal.getName()}");

    if (animal is Lion) {
      print("Mane Size: ${animal.maneSize}");
    } else if (animal is Elephant) {
      print("Trunk Length: ${animal.trunkLength}");
    } else if (animal is Parrot) {
      print("Vocabulary Size: ${animal.vocabularySize}");
    }

    // Sound
    animal.makeSound();
    print("---------------------");
  }
}
